{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { fetchURL } from \"../config\";\n\nvar medFetch = function medFetch(body) {\n  var result;\n  return _regeneratorRuntime.async(function medFetch$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          fetch(fetchURL, {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n          }).then(function (response) {\n            return response.json();\n          }).then(function (json) {\n            result = json.response;\n          }, function (err) {\n            result = err;\n          }).catch(function (error) {\n            result = error;\n          });\n          return _context.abrupt(\"return\", {\n            result: result\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default medFetch;","map":{"version":3,"sources":["/home/ritesh/medbook/medbook-client/medbook2/medbook/src/Actions/fetch.js"],"names":["fetchURL","medFetch","body","fetch","method","headers","Accept","JSON","stringify","then","response","json","result","err","catch","error"],"mappings":";AAAA,SAASA,QAAT;;AAEA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,UAAAA,KAAK,CAACH,QAAD,EAAW;AACZI,YAAAA,MAAM,EAAE,MADI;AAEZC,YAAAA,OAAO,EAAE;AACTC,cAAAA,MAAM,EAAE,kBADC;AAET,8BAAgB;AAFP,aAFG;AAMZJ,YAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AANM,WAAX,CAAL,CAOGO,IAPH,CAOQ,UAACC,QAAD,EAAc;AAClB,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,WAR3B,EASKF,IATL,CASU,UAACE,IAAD,EAAQ;AACVC,YAAAA,MAAM,GAAGD,IAAI,CAACD,QAAd;AACH,WAXL,EAWM,UAACG,GAAD,EAAS;AACPD,YAAAA,MAAM,GAACC,GAAP;AACH,WAbL,EAaOC,KAbP,CAaa,UAACC,KAAD,EAAW;AAChBH,YAAAA,MAAM,GAACG,KAAP;AACH,WAfL;AAFY,2CAkBL;AAACH,YAAAA,MAAM,EAANA;AAAD,WAlBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAoBA,eAAeX,QAAf","sourcesContent":["import { fetchURL } from \"../config\";\n\nconst medFetch= async (body)=>{\n    let result;\n    fetch(fetchURL, {\n        method: 'POST',\n        headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    }).then((response) => {\n        return response.json()})\n        .then((json)=>{\n            result = json.response;\n        },(err) => {\n            result=err\n        }).catch((error) => {\n            result=error\n        });\n    return {result}\n    }\nexport default medFetch;"]},"metadata":{},"sourceType":"module"}