{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport medFetch from \"../Actions/fetch\";\nimport PostItem from \"../Components/PostItem\";\nimport { fetchURL } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar isCloseToBottom = function isCloseToBottom(_ref) {\n  var layoutMeasurement = _ref.layoutMeasurement,\n      contentOffset = _ref.contentOffset,\n      contentSize = _ref.contentSize;\n  var paddingToBottom = 20;\n  return layoutMeasurement.height + contentOffset.y >= contentSize.height - 50;\n};\n\nvar Post = function Post() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      PostItems = _useState2[0],\n      setPostItems = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var loadPost = function loadPost() {\n    medFetch({\n      type: 'select',\n      table: 'post',\n      condition: {},\n      limit: \"\" + (PostItems.length + 5)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setPostItems(json);\n    });\n  };\n\n  if (PostItems.length == 0) loadPost(setPostItems, setModalVisible, PostItems);\n  return _jsxs(ScrollView, {\n    onScroll: function onScroll(_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n\n      if (isCloseToBottom(nativeEvent)) {\n        loadPost(setPostItems, setModalVisible, PostItems);\n      }\n    },\n    style: {\n      flexGrow: 1\n    },\n    children: [PostItems, _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      style: {\n        position: \"absolute\"\n      },\n      children: _jsx(Text, {\n        style: {\n          margin: 20,\n          backgroundColor: \"white\",\n          borderRadius: 20,\n          padding: 35,\n          top: 200,\n          color: 'blue',\n          textAlign: 'center',\n          alignItems: \"center\",\n          shadowColor: \"#000\",\n          fontSize: 45,\n          shadowOffset: {\n            width: 0,\n            height: 2\n          }\n        },\n        children: \" Loading\"\n      })\n    })]\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/ritesh/medbook/medbook-client/medbook2/medbook/src/Screens/Post.js"],"names":["useState","medFetch","PostItem","fetchURL","isCloseToBottom","layoutMeasurement","contentOffset","contentSize","paddingToBottom","height","y","Post","PostItems","setPostItems","modalVisible","setModalVisible","loadPost","type","table","condition","limit","length","then","response","json","nativeEvent","flexGrow","position","margin","backgroundColor","borderRadius","padding","top","color","textAlign","alignItems","shadowColor","fontSize","shadowOffset","width"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAGA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT;;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAuD;AAAA,MAApDC,iBAAoD,QAApDA,iBAAoD;AAAA,MAAjCC,aAAiC,QAAjCA,aAAiC;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAC7E,MAAMC,eAAe,GAAG,EAAxB;AACA,SAAOH,iBAAiB,CAACI,MAAlB,GAA2BH,aAAa,CAACI,CAAzC,IACLH,WAAW,CAACE,MAAZ,GAAqB,EADvB;AAED,CAJD;;AAKA,IAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,kBAAkCX,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwCb,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOc,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBf,IAAAA,QAAQ,CAAC;AAACgB,MAAAA,IAAI,EAAC,QAAN;AAAeC,MAAAA,KAAK,EAAC,MAArB;AAA4BC,MAAAA,SAAS,EAAC,EAAtC;AAA0CC,MAAAA,KAAK,EAAE,MAAMR,SAAS,CAACS,MAAV,GAAiB,CAAvB;AAAjD,KAAD,CAAR,CAAsFC,IAAtF,CAA2F,UAAAC,QAAQ;AAAA,aAAEA,QAAQ,CAACC,IAAT,EAAF;AAAA,KAAnG,EAAsHF,IAAtH,CAA2H,UAAAE,IAAI;AAAA,aAAEX,YAAY,CAACW,IAAD,CAAd;AAAA,KAA/H;AACD,GAFD;;AAGA,MAAIZ,SAAS,CAACS,MAAV,IAAoB,CAAxB,EACEL,QAAQ,CAACH,YAAD,EAAeE,eAAf,EAAgCH,SAAhC,CAAR;AACF,SACE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,yBAAqB;AAAA,UAAlBa,WAAkB,SAAlBA,WAAkB;;AACzC,UAAIrB,eAAe,CAACqB,WAAD,CAAnB,EAAkC;AAChCT,QAAAA,QAAQ,CAACH,YAAD,EAAeE,eAAf,EAAgCH,SAAhC,CAAR;AAED;AACF,KALD;AAKG,IAAA,KAAK,EAAE;AAACc,MAAAA,QAAQ,EAAC;AAAV,KALV;AAAA,eAMGd,SANH,EAOE,KAAC,KAAD;AACE,MAAA,aAAa,EAAC,OADhB;AAEE,MAAA,WAAW,EAAE,IAFf;AAGE,MAAA,OAAO,EAAEE,YAHX;AAIE,MAAA,KAAK,EAAE;AAAEa,QAAAA,QAAQ,EAAE;AAAZ,OAJT;AAAA,gBAME,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACXC,UAAAA,MAAM,EAAE,EADG;AAEXC,UAAAA,eAAe,EAAE,OAFN;AAGXC,UAAAA,YAAY,EAAE,EAHH;AAIXC,UAAAA,OAAO,EAAE,EAJE;AAKXC,UAAAA,GAAG,EAAE,GALM;AAMXC,UAAAA,KAAK,EAAE,MANI;AAOXC,UAAAA,SAAS,EAAE,QAPA;AAQXC,UAAAA,UAAU,EAAE,QARD;AASXC,UAAAA,WAAW,EAAE,MATF;AAUXC,UAAAA,QAAQ,EAAE,EAVC;AAWXC,UAAAA,YAAY,EAAE;AACZC,YAAAA,KAAK,EAAE,CADK;AAEZ9B,YAAAA,MAAM,EAAE;AAFI;AAXH,SAAb;AAAA;AAAA;AANF,MAPF;AAAA,IADF;AAkCD,CA1CD;;AA2CA,eAAeE,IAAf","sourcesContent":["import { useState } from \"react\";\nimport { Modal, Text } from \"react-native\"\nimport { ScrollView } from \"react-native\";\nimport medFetch from \"../Actions/fetch\";\nimport PostItem from \"../Components/PostItem\";\nimport { fetchURL } from \"../config\";\nconst isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\n  const paddingToBottom = 20;\n  return layoutMeasurement.height + contentOffset.y >=\n    contentSize.height - 50;\n};\nconst Post = () => {\n  const [PostItems, setPostItems] = useState([])\n  const [modalVisible, setModalVisible] = useState(true);\n  const loadPost = () => {\n    medFetch({type:'select',table:'post',condition:{} ,limit: \"\" + (PostItems.length+5)}).then(response=>response.json()).then(json=>setPostItems(json))\n  }\n  if (PostItems.length == 0)\n    loadPost(setPostItems, setModalVisible, PostItems);\n  return (\n    <ScrollView onScroll={({ nativeEvent }) => {\n      if (isCloseToBottom(nativeEvent)) {\n        loadPost(setPostItems, setModalVisible, PostItems)\n        //setModalVisible(!modalVisible)\n      }\n    }} style={{flexGrow:1}}>\n      {PostItems}\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        style={{ position: \"absolute\" }}\n      >\n        <Text style={{\n          margin: 20,\n          backgroundColor: \"white\",\n          borderRadius: 20,\n          padding: 35,\n          top: 200,\n          color: 'blue',\n          textAlign: 'center',\n          alignItems: \"center\",\n          shadowColor: \"#000\",\n          fontSize: 45,\n          shadowOffset: {\n            width: 0,\n            height: 2\n          }\n        }}> Loading</Text>\n      </Modal>\n    </ScrollView>\n\n  )\n}\nexport default Post;"]},"metadata":{},"sourceType":"module"}