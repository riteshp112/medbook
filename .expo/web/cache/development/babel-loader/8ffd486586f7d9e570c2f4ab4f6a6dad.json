{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport medFetch from \"../Actions/fetch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUp = function SignUp(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUserName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gender = _useState8[0],\n      setGender = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dob = _useState10[0],\n      setdob = _useState10[1];\n\n  var saveUser = function saveUser() {\n    medFetch({\n      type: 'insert',\n      table: 'testcol',\n      data: {\n        name: name,\n        username: username,\n        password: password,\n        gender: gender,\n        dob: dob\n      }\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Name:\"\n    }), _jsx(TextInput, {\n      style: {\n        borderWidth: 2,\n        marginTop: 2,\n        height: 25\n      },\n      onChangeText: function onChangeText(value) {\n        return setName(value);\n      }\n    }), _jsx(Text, {\n      children: \"Username\"\n    }), _jsx(TextInput, {\n      style: {\n        borderWidth: 2,\n        marginTop: 2,\n        height: 25\n      },\n      onChangeText: function onChangeText(value) {\n        return setUserName(value);\n      }\n    }), _jsx(Text, {\n      children: \"Passworrd\"\n    }), _jsx(TextInput, {\n      style: {\n        borderWidth: 2,\n        marginTop: 2,\n        height: 25\n      },\n      onChangeText: function onChangeText(value) {\n        return setPassword(value);\n      }\n    }), _jsx(Text, {\n      children: \"Gender\"\n    }), _jsxs(Picker, {\n      onValueChange: function onValueChange(itemValue, itemIndex) {\n        return setGender(itemValue);\n      },\n      children: [_jsx(Picker.Item, {\n        value: \"\",\n        label: \"Select Your Gender\"\n      }), _jsx(Picker.Item, {\n        value: \"M\",\n        label: \"M\"\n      }), _jsx(Picker.Item, {\n        value: \"F\",\n        label: \"F\"\n      })]\n    }), _jsx(Text, {\n      children: \"Dob\"\n    }), _jsx(TextInput, {\n      style: {\n        borderWidth: 2,\n        marginTop: 2,\n        height: 25\n      },\n      onChangeText: function onChangeText(value) {\n        if (value.len == 2 || value.len == 5) value = value + setdob(value);\n      },\n      placeholder: \"DD/MM/YYYY\"\n    }), _jsx(Button, {\n      title: \"Sign UP\",\n      onPress: saveUser\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        marginTop: 16,\n        justifyContent: 'center'\n      },\n      children: [_jsx(Text, {\n        style: {\n          marginTop: 10\n        },\n        children: \"Already have a Account? \"\n      }), _jsx(Button, {\n        title: 'Login',\n        onPress: function onPress() {\n          return props.signsuccess(false);\n        }\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default SignUp;","map":{"version":3,"sources":["/home/ritesh/medbook/medbook-client/medbook2/medbook/src/Screens/SignUp.js"],"names":["React","useState","medFetch","SignUp","props","name","setName","username","setUserName","password","setPassword","gender","setGender","dob","setdob","saveUser","type","table","data","borderWidth","marginTop","height","value","itemValue","itemIndex","len","flexDirection","justifyContent","signsuccess","styles","StyleSheet","create","container","flex","backgroundColor","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, TextInput, View, Picker, Button } from 'react-native';\nimport medFetch from '../Actions/fetch';\nconst SignUp = (props) => {\n  const [name, setName] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [dob, setdob] = useState(\"\");\n  const saveUser = ()=> {\n    medFetch({ type: 'insert', table: 'testcol', data: { name, username, password, gender, dob }})\n  }\n  return (\n    <View>\n      <Text>Name:</Text>\n      <TextInput style={{ borderWidth: 2, marginTop: 2, height: 25 }} onChangeText={(value) => setName(value)}>\n      </TextInput>\n      <Text>Username</Text>\n      <TextInput style={{ borderWidth: 2, marginTop: 2, height: 25 }} onChangeText={(value) => setUserName(value)}>\n      </TextInput>\n      <Text>Passworrd</Text>\n      <TextInput style={{ borderWidth: 2, marginTop: 2, height: 25 }} onChangeText={(value) => setPassword(value)}>\n      </TextInput>\n      <Text>Gender</Text>\n      <Picker onValueChange={(itemValue, itemIndex) => setGender(itemValue)} >\n        <Picker.Item value=\"\" label=\"Select Your Gender\"></Picker.Item>\n        <Picker.Item value=\"M\" label=\"M\"></Picker.Item>\n        <Picker.Item value=\"F\" label=\"F\"></Picker.Item>\n      </Picker >\n      <Text>Dob</Text>\n      <TextInput style={{ borderWidth: 2, marginTop: 2, height: 25 }} onChangeText={(value)=>{\n        if(value.len==2 || value.len==5)\n          value=value+\n        setdob(value)}} placeholder={\"DD/MM/YYYY\"} ></TextInput>\n      <Button title={\"Sign UP\"} onPress={saveUser}></Button>\n      <View style={{flexDirection:'row',marginTop:16,justifyContent:'center'}}>\n        <Text style={{marginTop:10}}>Already have a Account? </Text>\n        <Button title={'Login'} onPress={()=>props.signsuccess(false)}></Button>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n export default SignUp;"]},"metadata":{},"sourceType":"module"}