{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useRef, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport WebView from \"react-native-webview\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Doctors = function (_Component) {\n  _inherits(Doctors, _Component);\n\n  var _super = _createSuper(Doctors);\n\n  function Doctors(props) {\n    var _this;\n\n    _classCallCheck(this, Doctors);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      val: \"doctor\"\n    };\n    return _this;\n  }\n\n  _createClass(Doctors, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(_Fragment, {\n        children: Platform.OS === 'web' ? _jsx(View, {\n          style: {\n            flex: flex\n          },\n          children: _jsx(Text, {\n            children: \"This Feature Will Be Available Soon\"\n          })\n        }) : _jsxs(View, {\n          children: [_jsx(WebView, {\n            source: {\n              uri: \"https://www.google.com/maps/search/\" + this.state.val + \" near me\"\n            }\n          }), _jsx(TextInput, {\n            editable: true,\n            style: {\n              opacity: 100,\n              backgroundColor: \"white\",\n              position: \"absolute\",\n              height: 45,\n              top: 40,\n              width: \"100%\",\n              fontSize: 24,\n              color: \"black\",\n              textAlignVertical: \"bottom\"\n            },\n            placeholder: \"Search by Doctors name or speciality\",\n            onChangeText: function onChangeText(value) {\n              return _this2.setState({\n                val: value != \"\" ? value : \"doctor\"\n              });\n            }\n          }), _jsx(Text, {\n            style: {\n              textAlign: \"center\",\n              position: \"absolute\",\n              height: 40,\n              fontSize: 20,\n              color: 'red',\n              textAlignVertical: 'center',\n              backgroundColor: \"white\",\n              width: \"100%\"\n            },\n            children: \"Click on View list to hide map\"\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Doctors;\n}(Component);\n\nexport { Doctors as default };","map":{"version":3,"sources":["/home/ritesh/medbook/medbook-client/medbook2/medbook/src/Screens/Doc.js"],"names":["React","Component","useRef","useState","WebView","Doctors","props","state","val","Platform","OS","flex","uri","opacity","backgroundColor","position","height","top","width","fontSize","color","textAlignVertical","value","setState","textAlign"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;;;AAGA,OAAOC,OAAP,MAAoB,sBAApB;;;;;IAEqBC,O;;;;;AACnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAFiB;AAKlB;;;;WAED,kBAAS;AAAA;;AACP,aACE;AAAA,kBACGC,QAAQ,CAACC,EAAT,KAAc,KAAd,GAAoB,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,IAAI,EAAJA;AAAD,WAAb;AAAA,oBAAqB,KAAC,IAAD;AAAA;AAAA;AAArB,UAApB,GACD,MAAC,IAAD;AAAA,qBACA,KAAC,OAAD;AACE,YAAA,MAAM,EAAE;AAAEC,cAAAA,GAAG,EAAE,wCAAwC,KAAKL,KAAL,CAAWC,GAAnD,GAAyD;AAAhE;AADV,YADA,EAKA,KAAC,SAAD;AACE,YAAA,QAAQ,EAAE,IADZ;AAEE,YAAA,KAAK,EAAE;AACLK,cAAAA,OAAO,EAAE,GADJ;AAELC,cAAAA,eAAe,EAAE,OAFZ;AAILC,cAAAA,QAAQ,EAAE,UAJL;AAKLC,cAAAA,MAAM,EAAE,EALH;AAMLC,cAAAA,GAAG,EAAE,EANA;AAOLC,cAAAA,KAAK,EAAE,MAPF;AAQLC,cAAAA,QAAQ,EAAE,EARL;AASLC,cAAAA,KAAK,EAAE,OATF;AAULC,cAAAA,iBAAiB,EAAE;AAVd,aAFT;AAcE,YAAA,WAAW,EAAC,sCAdd;AAeE,YAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,qBAAI,MAAI,CAACC,QAAL,CAAc;AAAEf,gBAAAA,GAAG,EAAEc,KAAK,IAAI,EAAT,GAAcA,KAAd,GAAsB;AAA7B,eAAd,CAAJ;AAAA;AAfrB,YALA,EAsBA,KAAC,IAAD;AACE,YAAA,KAAK,EAAE;AAAEE,cAAAA,SAAS,EAAE,QAAb;AAAuBT,cAAAA,QAAQ,EAAE,UAAjC;AAA6CC,cAAAA,MAAM,EAAE,EAArD;AAAwDG,cAAAA,QAAQ,EAAC,EAAjE;AAAoEC,cAAAA,KAAK,EAAC,KAA1E;AAAiFC,cAAAA,iBAAiB,EAAC,QAAnG;AAA4GP,cAAAA,eAAe,EAAE,OAA7H;AAAsII,cAAAA,KAAK,EAAE;AAA7I,aADT;AAAA;AAAA,YAtBA;AAAA;AAFF,QADF;AAiCD;;;;EA1CkCjB,S;;SAAhBI,O","sourcesContent":["import React, { Component, useRef, useState } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport { Platform } from \"react-native\";\nimport WebView from \"react-native-webview\";\n\nexport default class Doctors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      val: \"doctor\"\n    };\n  }\n\n  render() {\n    return (\n      <>\n        {Platform.OS==='web'?<View style={{flex}}><Text>This Feature Will Be Available Soon</Text></View>:\n        <View>\n        <WebView\n          source={{ uri: \"https://www.google.com/maps/search/\" + this.state.val + \" near me\" }}\n          //style={{ marginTop: 20 }}\n        />\n        <TextInput\n          editable={true}\n          style={{\n            opacity: 100,\n            backgroundColor: \"white\",\n            //borderWidth: 2,\n            position: \"absolute\",\n            height: 45,\n            top: 40,\n            width: \"100%\",\n            fontSize: 24,\n            color: \"black\",\n            textAlignVertical: \"bottom\"\n          }}\n          placeholder=\"Search by Doctors name or speciality\"\n          onChangeText={value => this.setState({ val: value != \"\" ? value : \"doctor\" })}\n        ></TextInput>\n        <Text\n          style={{ textAlign: \"center\", position: \"absolute\", height: 40,fontSize:20,color:'red', textAlignVertical:'center',backgroundColor: \"white\", width: \"100%\" }}\n        >\n          Click on View list to hide map\n        </Text>\n        </View>}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}